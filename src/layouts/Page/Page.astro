---
import '@/styles/index.css'
import '@fontsource-variable/onest'
import '@fontsource-variable/dm-sans'

import './Page.css'
import Background from './components/Background/Background.astro'
import Nav from './components/Nav/Nav.astro'
import Footer from './components/Footer/Footer.astro'
import jsonData from '@/data.json'

interface Props {
  subtitle?: string
}

const { subtitle } = Astro.props

const { title, desc } = jsonData.documentInfo
const { base, separator } = title

let fullTitle = base

if (subtitle) fullTitle += ` ${separator} ${subtitle}`
---

<html lang="en">
  <head>
    <!-- TODO: completar para el SEO -->

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="robots" content="index, follow" />
    <link rel="canonical" href="https://juan-agustin-lovera.netlify.app/" />

    <meta name="theme-color" content="#eb5547" />

    <link rel="icon" href="/favicon-logo-s.ico" />
    <title>{fullTitle}</title>
    <meta name="description" content={desc} />

    <meta
      name="google-site-verification"
      content="YYKIvWV2nOIwchh9AOzo4kwVG5FWKATc4FVCH2h2pH0"
    />
  </head>
  <body>
    <Background />
    <div class="layout">
      <div class="content">
        <main>
          <slot />
        </main>
        <Footer />
      </div>
      <Nav />
    </div>
  </body>
</html>

<script is:inline src="https://kit.fontawesome.com/7463805de7.js"></script>

<script>
  import { bodyManager } from '@/tools/elementManagers.tool'
  import { darkModeEntity } from '@/services'

  const DEFAULT_DARK_MODE = true

  const darkModeInit = () => {
    // Si existe la entidad en local storage, se la utiliza
    const darkModeValue = darkModeEntity.get()
    if (darkModeValue !== null) return darkModeValue

    // Si existe la media del usuario, se la utiliza
    if (window.matchMedia)
      return window.matchMedia('(prefers-color-scheme: dark)').matches

    // Si no, se crea la entidad en local storage y se la utiliza
    darkModeEntity.set(DEFAULT_DARK_MODE)
    return DEFAULT_DARK_MODE
  }

  bodyManager.data.darkMode.set(String(darkModeInit()))
</script>
