---
import * as HamburgerMenuStyled from './HamburgerMenu.styled'
import Hamburger from './components/Hamburger/Hamburger.astro'
import Separator, {
  type Props as SeparatorProps,
} from '@/components/Separator/Separator.astro'
import Link, { type Props as LinkProps } from '@/components/Link/Link.astro'
import ToggleDarkMode from '@/components/ToggleDarkMode/ToggleDarkMode.astro'
import SocialNet from '@/components/SocialNet/SocialNet.astro'
import { VARS } from '@/styles'
import jsonData from '@/data.json'

interface Props {
  linksData: {
    home: LinkProps[]
    resume: LinkProps
  }
}

const { home, resume } = Astro.props.linksData
const { externalNetwork } = jsonData

const separatorProps: SeparatorProps = {
  style: {
    color: {
      light: VARS.color.b.line.light,
      dark: VARS.color.b.line.dark,
    },
  },
}
---

<HamburgerMenuStyled.Component id="hamburger-menu" data-is-open="false">
  <button id="deep-touch" title="Cerrar menÃº"></button>
  <header class="adaptable">
    <div class="content">
      <div class="controls">
        <Hamburger />
        <ToggleDarkMode />
      </div>
      <Separator {...separatorProps} />
      <nav>
        {home.map(item => <Link {...item} />)}
        <Separator {...separatorProps} />
        <Link {...resume} />
        <Separator {...separatorProps} />
        <div class="external-networks">
          {
            externalNetwork.map(({ url, faIcon, title }) => (
              <SocialNet
                url={url}
                faIcon={faIcon}
                title={`Ir al perfil de ${title}`}
              />
            ))
          }
        </div>
      </nav>
    </div>
  </header>
</HamburgerMenuStyled.Component>

<script>
  import { hamburgerMenuManager } from '@/tools/elementManagers.tool'

  const deepTouch = window.document.querySelector('#deep-touch')

  deepTouch?.addEventListener('click', () =>
    hamburgerMenuManager.data.isOpen.set('false')
  )
</script>
