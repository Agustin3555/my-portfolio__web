:root {
  --bpm: 124;
}

* {
  box-sizing: border-box;
  margin: 0;

  font-size: var(--global-font-size);
  line-height: 1;
  word-spacing: calc(0.0625rem * 3);
  letter-spacing: calc(0.0625rem * 0.05);
  color: inherit;

  scrollbar-width: thin;
  scrollbar-color: rgba(var(--pal-color-base-white), 0.25) transparent;
}

html {
  text-rendering: optimizeLegibility;
  background-color: var(--pal-color-gs-900);
}

::selection {
  color: var(--pal-color-white);
  background-color: var(--pal-color-b);
}

:is(h1, h2, h3, h4) {
  display: inline-flex;
  flex-direction: column;

  line-height: 1.5;
  font-family: var(--pal-font-b);
  font-weight: 500;
  text-wrap: balance;
  word-spacing: initial;
  letter-spacing: initial;
  color: var(--pal-color-gs-100);

  strong {
    line-height: inherit;
    font-family: var(--pal-font-a);
    font-weight: initial;
    color: var(--pal-color-a);
  }
}

h1,
h2 {
  font-size: clamp(var(--pal-size-font-m), 5dvw, var(--pal-size-font-2xl));

  strong {
    font-size: max(0.5em, var(--pal-size-font-m));
  }
}

h3 {
  gap: var(--pal-size-xs);

  font-size: var(--pal-size-font-m);

  strong {
    font-size: var(--pal-size-font-xs);
  }
}

address {
  font-style: initial;
}

ul,
ol {
  display: flex;
  padding: 0;

  list-style: none;
}

span {
  display: block;
}

button {
  border: none;
  padding: 0;
  background-color: transparent;
  cursor: pointer;
}

a {
  text-decoration: none;
}

.text {
  line-height: 1.5;
  text-wrap: pretty;

  > strong {
    font-weight: 600;
    color: var(--pal-color-a-l2);

    transition: color var(--pal-time-s) ease-out;
  }
}

.paragraphs {
  > * {
    margin-bottom: 1.75em;
  }

  :last-child {
    margin-bottom: 0;
  }
}

:root {
  --cls-bg-color: var(--pal-color-gs-850);
}

.bg {
  --multiplier: 0.15;
  --bevel: inset 0 0 0 0.0625rem
      rgba(var(--pal-color-base-white), calc(0.075 * var(--multiplier))),
    inset 0.0625rem 0.0625rem 0 0
      rgba(var(--pal-color-base-white), calc(0.05 * var(--multiplier))),
    inset 0 0.0625rem 0 0
      rgba(var(--pal-color-base-white), calc(0.1 * var(--multiplier)));

  background-color: var(--cls-bg-color);
  box-shadow: var(--bevel);
}

:root {
  --cls-card-border-radius: 0.625rem;
}

.card {
  border-radius: var(--cls-card-border-radius);
  box-shadow: var(--pal-shadow-1), var(--bevel);

  &.bg {
    --multiplier: 0.75;
  }

  &.layout {
    position: relative;

    display: flex;
    gap: var(--layout-gutter);
    padding: var(--layout-gutter);
  }
}

.external-link {
  --arrow-thickness: 0.0625rem;
  --arrow-head-size: calc(var(--pal-size-m) - var(--decreasing-factor, 0rem));
  --arrow-line-length: calc(var(--arrow-head-size) * sqrt(2) * 1.125);
  --arrow-color-alpha: 0.625;
  --arrow-color: rgba(var(--pal-color-base-white), var(--arrow-color-alpha));

  position: relative;

  border-top-right-radius: 0;

  &:hover {
    --arrow-color-alpha: 1;

    &::before {
      scale: 1;
    }
  }

  &::before,
  &::after {
    position: absolute;
    top: 0;
    right: 0;

    content: "";
  }

  &::before {
    width: var(--arrow-line-length);
    height: var(--arrow-thickness);
    translate: -0.03125rem;
    scale: 0;
    rotate: -45deg;

    transition: scale var(--pal-time-s) ease-out;

    background: linear-gradient(45deg, transparent, var(--arrow-color));
    transform-origin: top right;
  }

  &::after {
    border-style: solid;
    border-top-width: var(--arrow-thickness);
    border-right-width: var(--arrow-thickness);
    border-image: linear-gradient(45deg, transparent 50%, var(--arrow-color)) 1;
    aspect-ratio: 1;
    width: var(--arrow-head-size);

    transition: border-image var(--pal-time-s) ease-out;
  }

  &.s {
    --decreasing-factor: var(--pal-size-xs);
  }
}

@keyframes pulsar {
  from {
    outline-width: 0;
    outline-offset: initial;
    outline-color: var(--pal-color-a-l2);
  }
  25%,
  to {
    outline-width: 0.0625rem;
    outline-offset: var(--pal-size-xl);
    outline-color: transparent;
  }
}

.pulsar {
  outline-width: 0;
  outline-style: solid;

  animation: pulsar calc((60s / var(--bpm)) * 8) linear infinite;
}
