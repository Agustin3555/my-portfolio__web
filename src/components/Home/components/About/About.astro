---
import Section from "@/layouts/Section/Section.astro";
import Tabbed from "@/layouts/Tabbed/Tabbed.astro";
import * as AboutStyled from "./About.styled";
import GlassPanel from "@/components/GlassPanel/GlassPanel.astro";
import SocialNetwork from "@/components/SocialNetwork/SocialNetwork.astro";
import ExternalLink from "@/components/ExternalLink/ExternalLink.astro";
import Pill from "@/components/Pill/Pill.astro";
import ContactLink from "@/components/ContactLink/ContactLink.astro";
import ImgsSlider from "../ImgsSlider/ImgsSlider.astro";
import { highlightToHTMLTag } from "@/tools";
import jsonData from "@/data.json";

const { externalNetwork, pages } = jsonData;

const { sections } = pages.home;
const sectionKey: keyof typeof sections = "about";

const { about } = sections;
const { header, subsections, imgs } = about.data;
const { intro, profProfile, hobbiesAndLikes } = subsections;
---

<!-- TODO: semantica HTML -->
<Section sectionKey={sectionKey}>
  <AboutStyled.Component>
    <div class="a">
      <header>
        <p class="hello text">{header.hello}</p>
        <h1>
          {header.title}
          <strong>{header.titleStrong}</strong>
        </h1>
      </header>
      <Tabbed
        sectionTitles={["Intro", profProfile.title, "Hobbies"]}
        handlingClass={["subsections"]}
      >
        <li>
          <div class="intro">
            <p class="text" set:html={highlightToHTMLTag(intro.text)} />
            <ul>
              {
                [
                  <ExternalLink
                    url={intro.residence.mapsUrl}
                    faIcon="fa-solid fa-location-dot"
                    text={intro.residence.text}
                    title={`Visitar ${intro.residence.text} en Maps`}
                  />,
                  <Pill faIcon="fa-solid fa-comment-dots">
                    <p>Ingles {intro.englishLevel}</p>
                  </Pill>,
                ].map((item) => <li>{item}</li>)
              }
            </ul>
          </div>
        </li>
        <li>
          <article>
            <h4>{profProfile.title}</h4>
            <p class="text" set:html={highlightToHTMLTag(profProfile.text)} />
          </article>
        </li>
        <li>
          <article>
            <h4>{hobbiesAndLikes.title}</h4>
            <ul class="hobbies-and-likes">
              {
                hobbiesAndLikes.items.map(({ title, emoji }) => (
                  <li>
                    <span>{emoji}</span>
                    <p>{title}</p>
                  </li>
                ))
              }
            </ul>
          </article>
        </li>
      </Tabbed>
    </div>
    <div class="b">
      <div class="x">
        <GlassPanel handlingClass={["glass-panel"]} />
        <ImgsSlider
          folder="about"
          imgs={imgs}
          eager
          style={{ aspectRatio: "1 / 1" }}
          handlingClass={["slider"]}
        />
      </div>
      <nav id="social-nets-in-about">
        {
          [
            ...externalNetwork
              .slice()
              .reverse()
              .map(({ url, faIcon, title }) => (
                <SocialNetwork
                  href={url}
                  faIcon={faIcon}
                  title={`Ir al perfil de ${title}`}
                />
              )),
            <ContactLink />,
          ].map((item, index) => <div style={`--i: ${index}`}>{item}</div>)
        }
      </nav>
    </div>
  </AboutStyled.Component>
</Section>

<script>
  import { NOT_FONT_SIZE, getCSSVarValue } from "@/styles";
  import { bodyManager } from "@/tools/elementManagers.tool";
  import { onScreen } from "@/tools";

  const MARGIN = NOT_FONT_SIZE.m;

  let margin = getCSSVarValue(MARGIN);
  margin = margin.slice(0, -3);
  margin = `-${parseFloat(margin) * 16}px`;

  const socialNetsInAbout = window.document.querySelector(
    "#social-nets-in-about",
  );

  socialNetsInAbout
    ? onScreen({
        observed: socialNetsInAbout,
        margin,
        onIntersectionChange: (isIntersecting) =>
          bodyManager.data.socialNetsLocation.set(String(!isIntersecting)),
      })
    : /*
        Si no existe socialNetsInAbout en la página, socialNetsInLeftNav siempre
        será visible.
      */
      bodyManager.data.socialNetsLocation.set("false");
</script>
