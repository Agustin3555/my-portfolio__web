---
import './About.css'
import Section from '@/layouts/Section/Section.astro'
import Tabbed from '@/layouts/Tabbed/Tabbed.astro'
import SocialNet from '@/components/SocialNet/SocialNet.astro'
import SmallLink from '@/components/SmallLink/SmallLink.astro'
import Pill from '@/components/Pill/Pill.astro'
import ContactLink from '@/components/ContactLink/ContactLink.astro'
import { highlightToHTMLTag } from '@/tools'
import jsonData from '@/data.json'

const { externalNetwork, pages } = jsonData

const { sections } = pages.home
const sectionKey: keyof typeof sections = 'about'

const { about } = sections
const { title, strong, faIcon, data } = about
const { hi, profProfile, knowMore } = data

const sectionTitles = Object.values(data).map(item => item.title)
---

<Section sectionKey={sectionKey} {...{ title, strong, faIcon }} main>
  <Tabbed sectionTitles={sectionTitles}>
    <li>
      {
        () => {
          const { residenceMapsLink, englishLevel, text } = hi.data

          return (
            <article class="hi">
              <p class="text bg card" set:html={highlightToHTMLTag(text)} />
              <footer>
                <nav id="social-nets-in-about">
                  {[
                    ...externalNetwork
                      .slice()
                      .reverse()
                      .map(({ url, faIcon, title }) => (
                        <SocialNet
                          url={url}
                          faIcon={faIcon}
                          title={`Ir al perfil de ${title}`}
                        />
                      )),
                    <ContactLink />,
                  ].map((item, index) => (
                    <div style={`--i: ${index}`}>{item}</div>
                  ))}
                </nav>
                <div>
                  <SmallLink
                    url={residenceMapsLink.url}
                    faIcon="fa-solid fa-location-dot"
                    text={residenceMapsLink.title}
                    title={`Ir a ${residenceMapsLink.title} en Maps`}
                  />
                  <Pill faIcon="fa-solid fa-comment-dots">
                    <p>Ingles {englishLevel}</p>
                  </Pill>
                </div>
              </footer>
            </article>
          )
        }
      }
    </li>
    <li>
      {
        () => {
          const { text } = profProfile.data

          return (
            <article>
              <div class="bg card">
                <p class="text" set:html={highlightToHTMLTag(text)} />
              </div>
            </article>
          )
        }
      }
    </li>
    <li>
      {
        () => {
          const { history, hobbiesAndLikes } = knowMore.data

          return (
            <>
              <article>
                <h3>{history.title}</h3>
                <div class="bg card">
                  <div class="paragraphs">
                    {history.data.paragraphs.map(item => (
                      <p class="text" set:html={highlightToHTMLTag(item)} />
                    ))}
                  </div>
                </div>
              </article>
              <article>
                <h3>{hobbiesAndLikes.title}</h3>
                <ul>
                  {hobbiesAndLikes.data.items.map(({ title, emoji }) => (
                    <li>
                      <span>{emoji}</span>
                      <p>{title}</p>
                    </li>
                  ))}
                </ul>
              </article>
            </>
          )
        }
      }
    </li>
  </Tabbed>
</Section>

<script>
  import { bodyManager } from '@/tools/elementManagers.tool'
  import { onScreen } from '@/tools'

  const margin = '16px'

  const socialNetsInAbout = window.document.querySelector(
    '#social-nets-in-about'
  )

  socialNetsInAbout
    ? onScreen({
        observed: socialNetsInAbout,
        margin,
        onIntersectionChange: isIntersecting =>
          bodyManager.data.socialNetsLocation.set(String(!isIntersecting)),
      })
    : /*
        Si no existe socialNetsInAbout en la página, socialNetsInLeftNav siempre
        será visible.
      */
      bodyManager.data.socialNetsLocation.set('false')
</script>
