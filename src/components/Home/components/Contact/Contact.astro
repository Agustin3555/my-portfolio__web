---
import './Contact.css'
import Section from '@/layouts/Section/Section.astro'
import Icon from '@/components/Icon/Icon.astro'
import ContactLink from '@/components/ContactLink/ContactLink.astro'
import { highlightToHTMLTag } from '@/tools'
import jsonData from '@/data.json'

const { sections } = jsonData.pages.home
const sectionKey: keyof typeof sections = 'contact'

const { contact } = sections
const { title, strong, faIcon } = contact
const { accordingToUser, email } = contact.data
---

<Section {...{ sectionKey, title, strong, faIcon }}>
  <div class="contact">
    <div class="according-to-user">
      {
        accordingToUser.map(({ title, desc }) => (
          <article class="bg card layout">
            <h3>{title}</h3>
            <p class="text" set:html={highlightToHTMLTag(desc)} />
          </article>
        ))
      }
    </div>
    <address>
      <p class="email">{email}</p>
      <div class="controls">
        <button
          id="button-copy-email"
          title="Copiar email"
          data-copying="false"
        >
          <Icon faIcon="fa-solid fa-copy" handlingClass={'copy-icon'} />
          <Icon faIcon="fa-solid fa-check" handlingClass={'check-icon'} />
        </button>
        <ContactLink emailSender />
      </div>
    </address>
  </div>
</Section>

<script>
  import { $, sleep } from '@/tools'
  import jsonData from '@/data.json'

  const { email } = jsonData.pages.home.sections.contact.data

  const buttonCopyEmail = $<HTMLButtonElement>('#button-copy-email')

  buttonCopyEmail?.addEventListener('click', async () => {
    try {
      await navigator.clipboard.writeText(email)

      buttonCopyEmail.disabled = true
      await sleep(2000)
      buttonCopyEmail.disabled = false
    } catch (error) {}
  })
</script>
